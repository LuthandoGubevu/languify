
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin.
    // This checks for the user's UID in a top-level 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users can read and update their own user profile information.
    match /users/{userId} {
      allow read, update, create: if request.auth.uid == userId;
    }

    // All authenticated users can read exams. Only admins can create/update/delete them.
    match /exams/{examId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }

    // Users can create their own submissions and read them back.
    // Admins can read/update any submission for feedback purposes.
    match /submissions/{submissionId} {
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow update: if isAdmin(); // For giving feedback
      allow delete: if false; // Disallow deleting submissions
    }

    // The collection that defines who is an admin.
    // Only other admins can read or write this collection. The first admin must be created via the console.
    match /admins/{userId} {
        allow read, write: if isAdmin();
    }
  }
}
